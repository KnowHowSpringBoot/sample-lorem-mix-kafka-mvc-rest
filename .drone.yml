kind: pipeline
name: CI

type : docker

trigger:
  branch:
    - main
    - develop
    - feature/*
  event:
    - push

volumes:
  - name: m2cache
    host:
      path: /volume1/m2cache
steps:

  - name: build
    image: maven:3-openjdk-17-slim
    volumes:
      - name: m2cache
        path: /root/.m2
    environment :
      DATASOURCE_DRIVER: org.postgresql.Driver
      DATASOURCE_URL: jdbc:postgresql://db:5432/sa_test_db
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
      SONAR_HOST :
        from_secret : SONAR_HOST
      SONAR_TOKEN :
        from_secret : SONAR_TOKEN
    commands:
      - mvn clean compile test-compile -P default -B -s settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      - mvn pmd:check -P default -B -s settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      - mvn com.github.spotbugs:spotbugs-maven-plugin:check -P default -Dspotbugs.xmlOutput=true -Dspotbugs.failOnError=true -Dspotbugs.includeTests=true -B -s settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      - mvn org.jacoco:jacoco-maven-plugin:prepare-agent package org.jacoco:jacoco-maven-plugin:report sonar:sonar -P default -Dsonar.host.url=$SONAR_HOST -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=ujar-org:lorem-ipsum-words-processor -Dsonar.projectName=ujar-org:lorem-ipsum-words-processor --batch-mode -s settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
    when:
      branch:
        include:
          - main
          - develop
          - feature/*
      event:
        exclude:
          - pull_request

  - name: publish-snapshot-package
    depends_on :
      - build
    image: maven:3-openjdk-17-slim
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands:
      - mvn deploy -P default -DskipTests=true -Dcheckstyle.skip=true -s settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
    when:
      branch:
        include:
          - main
          - develop
          - feature/*
      event:
        exclude:
          - pull_request

  - name: docker-build-dev-words-processing
    depends_on :
      - publish-snapshot-package
    image: plugins/docker
    settings:
      dockerfile: words-processing/Dockerfile
      context: ./words-processing/
      storage_driver: vfs
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      repo: docker-registry.ujar.org/ujar/lorem-ipsum-words-processing
      registry: docker-registry.ujar.org
      tags :
        - latest
    when:
      branch:
        include:
          - main
          - develop
          - feature/*
      event:
        exclude:
          - pull_request

  - name: docker-build-dev-reports-history
    depends_on :
      - docker-build-dev-words-processing
    image: plugins/docker
    settings:
      dockerfile: reports-history/Dockerfile
      context: ./reports-history/
      storage_driver: vfs
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
      repo: docker-registry.ujar.org/ujar/lorem-ipsum-reports-history
      registry: docker-registry.ujar.org
      tags :
        - latest
    when:
      branch:
        include:
          - main
          - develop
          - feature/*
      event:
        exclude:
          - pull_request

services:
  - name: db
    image: postgres:13.5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sa_test_db

  - name : zookeeper
    image : confluentinc/cp-zookeeper:6.2.4
    environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000

  - name: kafka
    image: confluentinc/cp-kafka:6.2.4
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS : 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR : 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR : 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR : 1
