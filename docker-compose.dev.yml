# This configuration is intended for development purpose
version: '3.8'
services:
  postgres:
    image: "postgres:13.5"
    container_name: lorem-ipsum-dev-postgres
    restart: unless-stopped
    ports :
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lorem_ipsum_db
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.4
    container_name: lorem-ipsum-dev-zookeeper
    restart: unless-stopped
    ports :
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-server:6.2.4
    container_name: lorem-ipsum-dev-kafka
    restart: unless-stopped
    depends_on :
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: lorem-ipsum-dev-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://lorem-ipsum-dev-kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS : 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR : 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR : 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR : 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS : kafka:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT : zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS : 1
      CONFLUENT_METRICS_ENABLE : "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID : "anonymous"

  confluent-schema-registry:
    image: confluentinc/cp-schema-registry:5.5.10
    container_name: lorem-ipsum-dev-confluent-schema-registry
    restart: unless-stopped
    hostname: confluent-schema-registry
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: confluent-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"

  confluent-control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    container_name: lorem-ipsum-dev-confluent-control-center
    restart: unless-stopped
    hostname: confluent-control-center
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL : 'http://confluent-schema-registry:8081'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  prometheus :
    container_name : lorem-ipsum-dev-prometheus
    image : prom/prometheus:v2.32.1
    volumes :
      - ./docker/prometheus/:/etc/prometheus/
    command :
      - '--config.file=/etc/prometheus/prometheus.yml'
    # On MacOS, remove next line and replace localhost by host.docker.internal in docker/prometheus/prometheus.yml and
    # docker/grafana/provisioning/datasources/datasource.yml
    network_mode : 'host' # to test locally running service
  grafana :
    container_name : lorem-ipsum-dev-grafana
    image : grafana/grafana:8.3.3
    volumes :
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
    environment :
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    # On MacOS, remove next line and replace localhost by host.docker.internal in docker/prometheus/prometheus.yml and
    # docker/grafana/provisioning/datasources/datasource.yml
    network_mode : 'host' # to test locally running service
